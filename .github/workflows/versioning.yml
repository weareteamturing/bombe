name: Versioning

on:
  pull_request:
    types: [closed]
    branches:
      - main


jobs:
  check-eslint-and-typescript:
    name: Check ESLint & Typescript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: '0'

      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Check ESLint
        run: lerna run check:lint

      - name: Check Typescript
        run: lerna run check:type

  build-packages:
    name: Build Packages
    runs-on: ubuntu-latest
    needs: check-eslint-and-typescript
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: '0'

      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run build
        run: lerna run build

  versioning-packages:
    name: Versioning Packages
    runs-on: ubuntu-latest
    needs: build-packages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: '0'
          token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set git config
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set npm config
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_AUTOMATION_TOKEN}"
        env:
          NPM_AUTOMATION_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}

      - name: Versioning
        run: lerna version --yes
